name: CI

on:
  push:
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  style:
    name: Check style
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

    - name: Install rust
      uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9
      with:
        toolchain: nightly
        components: rustfmt

    - name: Cargo fmt
      run: cargo fmt --all -- --check

  typos:
    name: Spell Check with Typos
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

    - name: Check the spelling of the files in our repo
      uses: crate-ci/typos@7436548694def3314aacd93ed06c721b1f91ea04

  clippy:
    name: Run clippy
    needs: [style]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

    - name: Install rust
      uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9
      with:
        toolchain: nightly
        components: clippy

    - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1

    - name: Clippy (all-features)
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Clippy (no-default-features)
      run: cargo clippy --all-targets --no-default-features -- -D warnings

  hack:
    name: Check that each feature compiles independently
    needs: [style]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

    - name: Install Rust
      uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9
      with:
        toolchain: stable

    - name: Load cache
      uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1

    - name: Install cargo-hack
      uses: taiki-e/install-action@e7ef886cf8f69c25ecef6bbc2858a42e273496ec
      with:
        tool: cargo-hack

    - name: Check that our features compile
      run: cargo hack check --each-feature --no-dev-deps

  test:
    name: ${{ matrix.target.name }} ${{ matrix.channel }}
    needs: [clippy]

    runs-on: ${{ matrix.target.os }}
    strategy:
      matrix:
        target: [
          { "os": "ubuntu-latest",  "toolchain": "x86_64-unknown-linux-gnu", "name": "Linux GNU" },
          { "os": "macos-13",       "toolchain": "x86_64-apple-darwin ",     "name": "macOS x86" },
          { "os": "macos-latest",   "toolchain": "aarch64-apple-darwin",     "name": "macOS arm" },
          { "os": "windows-latest", "toolchain": "x86_64-pc-windows-msvc",   "name": "Windows MSVC" },
        ]
        channel: [stable, beta, nightly]

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Install rust
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9
        with:
          toolchain: ${{ format('{0}-{1}', matrix.channel, matrix.target.toolchain) }}

      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1

      - name: Test
        run: cargo test --all-features
