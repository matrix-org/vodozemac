name: CI

on:
  push:
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  style:
    name: Check style
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

    - name: Install rust
      uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b
      with:
        toolchain: nightly
        components: rustfmt

    - name: Cargo fmt
      run: cargo fmt --all -- --check

  typos:
    name: Spell Check with Typos
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

    - name: Check the spelling of the files in our repo
      uses: crate-ci/typos@392b78fe18a52790c53f42456e46124f77346842

  clippy:
    name: Run clippy
    needs: [style]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

    - name: Install rust
      uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b
      with:
        toolchain: nightly
        components: clippy

    - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0

    - name: Clippy (all-features)
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Clippy (no-default-features)
      run: cargo clippy --all-targets --no-default-features -- -D warnings

  test:
    name: ${{ matrix.target.name }} ${{ matrix.channel }}
    needs: [clippy]

    runs-on: ${{ matrix.target.os }}
    strategy:
      matrix:
        target: [
          { "os": "ubuntu-latest",  "toolchain": "x86_64-unknown-linux-gnu", "name": "Linux GNU" },
          { "os": "macos-13",       "toolchain": "x86_64-apple-darwin ",     "name": "macOS x86" },
          { "os": "macos-latest",   "toolchain": "aarch64-apple-darwin",     "name": "macOS arm" },
          { "os": "windows-latest", "toolchain": "x86_64-pc-windows-msvc",   "name": "Windows MSVC" },
        ]
        channel: [stable, beta, nightly]

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Install rust
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b
        with:
          toolchain: ${{ format('{0}-{1}', matrix.channel, matrix.target.toolchain) }}

      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0

      - name: Test
        run: cargo test --all-features
